[tool.poetry]
name = "set-you-free"
version = "0.1.0"
description = "Structured Literature Search "
authors = ["Christia Gerloff <christian.gerloff@rwth-aachen.de>"]

[tool.poetry.dependencies]
python = ">=3.10.0,<4.0.0"
streamlit = "^1.11.0"
graphviz = "^0.20.1"
matplotlib-venn = "^0.11.7"
streamlit-aggrid = "^0.3.0"
rispy = "^0.7.1"
stqdm = "^0.0.4"
pydantic = "^1.10.7,<2"
typer = "^0.9.0"
lxml = "^4.9.2"
inquirer = "^3.1.3"
xmltodict = "^0.13.0"
importlib-metadata = "^6.6.0"
arxiv = "^1.4.7"
crossrefapi = "^1.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
ruff = "^0.0.261"
black = "^23.3.0"
polyfactory = "^2.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-v -s"
testpaths = [
    "set_you_free/backend/tests/unit",
    "set_you_free/backend/tests/integration",
]

### Static Linting Settings
[tool.black]
target-version = ['py39']
line-length    = 120

[tool.ruff]
select = [
    "A",     # flake8-builtins https://beta.ruff.rs/docs/rules/#flake8-builtins-a
    "ANN",   # flake8-annotation https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "ARG",   # flake8-unused-arguments https://beta.ruff.rs/docs/rules/#flake8-unused-arguments-arg
    "B",     # flake8-bugbear https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "C4",    # flake8-comprehensions https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    "C90",   # mccabe https://beta.ruff.rs/docs/rules/#mccabe-c90
    "COM",   # flake8-commas https://beta.ruff.rs/docs/rules/#flake8-commas-com
    "D",     # pydocstyle https://beta.ruff.rs/docs/rules/#pydocstyle-d
    "E",     # Error https://beta.ruff.rs/docs/rules/#error-e
    "ERA",   # eradicate https://beta.ruff.rs/docs/rules/#eradicate-era
    "F",     # Pyflakes https://beta.ruff.rs/docs/rules/#pyflakes-f
    "G",     # flake8-logging-format https://beta.ruff.rs/docs/rules/#flake8-logging-format-g
    "I",     # isort https://beta.ruff.rs/docs/rules/#isort-i
    "N",     # pep8-naming https://beta.ruff.rs/docs/rules/#pep8-naming-n
    "PD",    # pandas-vet https://beta.ruff.rs/docs/rules/#pandas-vet-pd
    "PIE",   # flake8-pie https://pypi.org/project/flake8-pie/
    "PT",    # flake8-pytest-style https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
    "PTH",   # flake8-use-pathlib https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    "Q",     # flake8-quotes https://beta.ruff.rs/docs/rules/#flake8-quotes-q
    "RET",   # flake8-return https://beta.ruff.rs/docs/rules/#flake8-return-ret
    "RSE",   # flake8-raise https://beta.ruff.rs/docs/rules/#flake8-raise-rse
    "S",     # flake8-bandit https://beta.ruff.rs/docs/rules/#flake8-bandit-s
    "SIM",   # flake8-simplify https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
    "T20",   # flake8-print https://beta.ruff.rs/docs/rules/#flake8-print-t20
    "TRY",   # tryceratops https://beta.ruff.rs/docs/rules/#tryceratops-try
    "UP032", # pyupgrade https://beta.ruff.rs/docs/rules/#pyupgrade-up
    "UP037", # pyupgrade https://beta.ruff.rs/docs/rules/#pyupgrade-up
]
line-length = 120
target-version = "py39"
ignore = [
    "B008",
    "C901",
    "S101",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D407",
    "D406",
    "ANN101",
    "ANN102",
    "ANN003",
    "PT001",
    "PT002",
    "PT004",
    "G004",
    "Q002",
]
fixable = ["I", "COM", "RSE", "E", "W", "G", "PT"]
unfixable = ["B"]
exclude = [
    ".eggs",
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
]

[tool.ruff.flake8-quotes]
inline-quotes    = "double"
docstring-quotes = "double"
